{"name":					"Authentication breach",
"serverCapacity":			3,
"serverRequestValley":		3,
"serverRequestPeak":		3,
"initialResource":			[60, 40],
"constantIncome":			[10,0],
"maxResource":				150,
"maxRounds":				24,
"assets":					300,
"defensive":				false,
"doublePlayer":				true,
"characterName":
[
	"Christopher",
	"Defensive AI"
],
"portrait":
[
	"Christopher",
	"defensiveAI"
],
"startingSound":	"intruderMustBeDestroyed",
"commonActs": 
[
	["MITM", "Promiscuous mode"],
	["Hash algorithm"]
],
"acts": 
[
	[
		{
			"name":				"Sniffing attack",
			"prerequisites":	["Promiscuous mode"],
			"desc":				"Finishing move. \nObtain rival's username and password, as well as other data, if the rival's network communication is not encrypted or hashed.",
			"needRivalBuffs":	["MITM"],
			"noRivalBuffs":		["Password hashed", "OTP", "Credential compromised"],
			"cost":				5,
			"rivalBuffs":		["Credential compromised"],
			"buffLength":		2,
			"bonus":			50
		},
		{
			"name": 			"Brute-force attack",
			"desc":				"Finishing move. \nBrute force attack can be used for cracking hash. However, here it's used for trying on password: repeatively try all possible combinations of passwords.",
			"noRivalBuffs":		["Password error limit", "Password error delay", "OTP", "Credential compromised"],
			"cost":				20,
			"successRate":		0.4,
			"rivalBuffs":		["Credential compromised"],
			"buffLength":		2,
			"bonus":			50
		},
		{
			"name": 			"Dictionary attack",
			"prerequisites":	["Brute-force attack"],
			"desc":				"Supporting category \nAn upgrade of brute-force attack. Try only the limited subset of the password, which is composed of words from the dictionary. Higher successRate.",
			"needRivalBuffs":	["Password hashed"],
			"noRivalBuffs":		["Salt", "OTP"],
			"cost":				15,
			"successRate":		0.61,
			"cleanRivalBuffs":	["Password hashed"]
		},
		{
			"name": 			"Rainbow table",
			"prerequisites":	["Dictionary attack"],
			"desc":				"Improvement. \nUse the rainbow table to assist the dictionary attack on long password. Increase the success rate of Dictionary attack.",
			"noSelfBuffs":		["Rainbow table"],
			"cost":				20,
			"selfBuffs":		["Rainbow table"],
			"modifier":			"0:Dictionary attack:successRate:*:1.5"
		},
		{
			"name":				"Replay attack",
			"desc":				"Finishing move. \nReplay the last message, effective even if encrypted. Countered by the use of nonce, timestamp (kerberos has timestamp), MID and relieve by sequence number",
			"needRivalBuffs":	["MITM"],
			"noRivalBuffs":		["Timestamp", "Kerberos", "OTP", "Credential compromised"],
			"cost":				5,
			"rivalBuffs":		["Credential compromised"],
			"buffLength":		2,
			"bonus":			35
		},
		{
			"name":				"Password DoS",
			"desc":				"DoS category. \nDelibrately insert wrong passwords to lock an account. Can be applied only if the rival has applied \"Password error limit\"",
			"needRivalBuffs":	["Password error limit"],
			"cost":				5,
			"rivalBuffs":		["Denial of service attacked"],
			"buffLength":		2,
			"superfluousRequests":		7
		},
		{
			"name":				"Privilege escalation",
			"desc":				"Additional finishing move. \nEscalate the privilege after having cracked an account. Deals additional damages at the same round.",
			"needRivalBuffs":	["Credential compromised"],
			"noRivalBuffs":		["Privilege escalation"],
			"cost":				30,
			"rivalBuffs":		["Privilege escalation"],
			"buffLength":		2,
			"bonus":			50,
			"unlocked":			false
		}
	],
	[		
		{
			"name":				"Password hashed",
			"prerequisites":	["Hash algorithm"],
			"desc":				"The server stores only the hash value of the password. Resistent to sniffing attack, but breakable by dictionary attack.",
			"cost":				10,
			"selfBuffs":		["Password hashed"],
			"buffLength":		8
		},
		{
			"name":				"MFA",
			"learningCost":		10,
			"desc":				"Multiple factor authentication. Using multiple methods of authentications of different types (don't put all of one's eggs in one basket). Halves the success rate of rival attacks, including Brute-force attack, Sniffing attack, Replay attack.",
			"noSelfBuffs":		["MFA"],
			"cost":				50,
			"modifier":			"0:Brute-force attack:successRate:/:2;0:Sniffing attack:successRate:/:2;0:Replay attack:successRate:/:2",
			"selfBuffs":		["MFA"]
		},
		{
			"name":				"Salt",
			"learningCost":		5,
			"desc":				"A random number to put with the password before it's hashed. Resistent against Dicionary attack.",
			"needSelfBuffs":	["Password hashed"],
			"cost":				10,
			"selfBuffs":		["Salt"],
			"buffLength":		6
		},
		{
			"name":				"Password error limit",
			"desc":				"Resistent to Brute-force attack, but open door for Password DoS attack.",
			"cost":				5,
			"selfBuffs":		["Password error limit"],
			"cleanSelfBuffs":	["Password error delay"],
			"buffLength":		8
		},
		{
			"name":				"Password error delay",
			"prerequisites":	["Password error limit"],
			"learningCost":		5,
			"desc":				"Resistent to Brute-force attack.",
			"cost":				10,
			"selfBuffs":		["Password error delay"],
			"cleanSelfBuffs":	["Password error limit"],
			"buffLength":		8
		},
		{
			"name":				"Timestamp",
			"desc":				"To put a time in the message, in order to fight the replay attack.",
			"cost":				10,
			"selfBuffs":		["Timestamp"],
			"buffLength":		6
		},
		{
			"name":				"OTP",
			"learningCost":		15,
			"desc":				"Use one time password to provide perfect security. Invincible when having the buff.",
			"cost":				40,
			"selfBuffs":		["OTP"],
			"buffLength":		4
		},
		{
			"name":				"Password manager",
			"learningCost":		5,
			"desc":				"Use a software to manage the passwords, gains resource each round because of the convenience provided to the users.",
			"cost":				5,
			"selfBuffs":		["Password auto-filled"],
			"cleanSelfBuffs":	["Kerberos"]
		},
		{
			"name":				"Kerberos",
			"prerequisites":	["Timestamp"],
			"learningCost":		25,
			"desc":				"An authentication protocol based on ticket. With built-in timestamp, it prevents replay attack. It also reduce sniffing attack probability. Besides, you gains resource each round because it provides multi-domain Single Sign-On.",
			"noSelfBuffs":		["Kerberos"],
			"cost":				30,
			"selfBuffs":		["Kerberos"],
			"cleanSelfBuffs":	["Password auto-filled"],
			"modifier":			"0:Sniffing attack:successRate:/:2",
			"unlocked":			false
		}
	]
],
"commonBuffs":
[
	"503 Server Unavailable", "Credential compromised", "Shared channel", "MITM", "Denial of service attacked", "MFA"
],
"buffs":
[
	{
		"name":		"Rainbow table",
		"desc":		"With rainbow table, dictionary attack can be used against long password. Higher success rate."
	},
	{
		"name":		"Password-based authentication",
		"desc":		"The most traditional form of authentication. With no other defences, it's very susceptive to sniffing attacks.",
		"upkeep":	1
	},
	{
		"name":		"Privilege escalation",
		"desc":		"In addition to stealing an account's credential, the attacker has made himself an administrator. The system is further damaged."
	},
	{
		"name":		"Password hashed",
		"desc":		"Instead of the password itself, the (one-way) hash of the password is transmitted and stored in the server. Sniffing attack alone will not compromise the credential."
	},
	{
		"name":		"Salt",
		"desc":		"Salt is added to the password before hashing. It has become a hard time for Dictionary attack.",
		"upkeep":	1
	},
	{
		"name":		"Password error limit",
		"desc":		"Number of attempts for wrong password is limited. An brute-force attack on login is prevented. However, password DoS is possible."
	},
	{
		"name":		"Password error delay",
		"desc":		"An user is delayed at wrong password. An brute-force attack on login is prevented."
	},
	{
		"name":		"Timestamp",
		"desc":		"With a timestamp, the replay attack is impossible."
	},
	{
		"name":		"OTP",
		"desc":		"OTP grants the character a temporary invicibility."
	},
	{
		"name":		"Password auto-filled",
		"desc":		"Clients are happier for not having to insert everytime the complex passwords by themselves.",
		"upkeep":	-3
	},
	{
		"name":		"Kerberos",
		"desc":		"Clients are happy for not having to insert passwords everytime, even across sites. The password is never transmitted after tickets are granted, so that sniffing attack becomes less effective. Replay attack is also defended by Kerberos's use of timestamp.",
		"upkeep":	-4
	}
],
"initialBuffs":
[
	[],
	[
		{
			"name":		"Password-based authentication",
			"length":	-1
		}
	]
],
"AI":
[
	{
		"pattern":
		["Password hashed"],
		"chance":	0.2
	},
	{
		"pattern":
		["MFA"],
		"chance":	0.13
	},
	{
		"pattern":
		["Password hashed", "Salt"],
		"chance":	0.15
	},
	{
		"pattern":
		["Password error limit"],
		"chance":	0.25
	},
	{
		"pattern":
		["Password error delay"],
		"chance":	0.15
	},
	{
		"pattern":
		["Timestamp"],
		"chance":	0.13
	},
	{
		"pattern":
		["OTP"],
		"chance":	0.1
	},
	{
		"pattern":
		["Kerberos"],
		"chance":	0.15
	}
],
"scripts":
[
	{
		"round":		11,
		"dialogues":
		[
			{
				"name":		"Hank",
				"portrait":	"Drunkard",
				"dialogue":	"A authentication system called Kerberos is developed. I'm afraid that we might encounter much hurdle intercepting credential."
			}
		],
		"newActs":
		[
			[],
			["Kerberos"]
		]
	},
	{
		"round":		13,
		"dialogues":
		[
			{
				"name":		"Calvin",
				"portrait":	"pirate4",
				"dialogue":	"A good news! I have descovered privilege escalation. When you have successfully compromised the credential, you can follow it with a privilege escaltion. ^By doing so, you could obtain the administrative privilege, so that the rival is further damaged."
			}
		],
		"newActs":
		[
			["Privilege escalation"],
			[]
		]
	}
]
}